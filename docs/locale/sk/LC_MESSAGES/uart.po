# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2018, Multiple authors
# This file is distributed under the same license as the BBC micro:bit
# MicroPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BBC micro:bit MicroPython 0.5.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-25 09:53+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../uart.rst:2
msgid "UART"
msgstr ""

#: ../../uart.rst:6
msgid ""
"The ``uart`` module lets you talk to a device connected to your board "
"using a serial interface."
msgstr ""

#: ../../uart.rst:11
msgid "Functions"
msgstr ""

#: ../../uart.rst:15
msgid ""
"Initialize serial communication with the specified parameters on the "
"specified ``tx`` and ``rx`` pins. Note that for correct communication, "
"the parameters have to be the same on both communicating devices."
msgstr ""

#: ../../uart.rst:21
msgid ""
"Initializing the UART on external pins will cause the Python console on "
"USB to become unaccessible, as it uses the same hardware. To bring the "
"console back you must reinitialize the UART without passing anything for "
"``tx`` or ``rx`` (or passing ``None`` to these arguments).  This means "
"that calling ``uart.init(115200)`` is enough to restore the Python "
"console."
msgstr ""

#: ../../uart.rst:27
msgid ""
"The ``baudrate`` defines the speed of communication. Common baud rates "
"include:"
msgstr ""

#: ../../uart.rst:30
msgid "9600"
msgstr ""

#: ../../uart.rst:31
msgid "14400"
msgstr ""

#: ../../uart.rst:32
msgid "19200"
msgstr ""

#: ../../uart.rst:33
msgid "28800"
msgstr ""

#: ../../uart.rst:34
msgid "38400"
msgstr ""

#: ../../uart.rst:35
msgid "57600"
msgstr ""

#: ../../uart.rst:36
msgid "115200"
msgstr ""

#: ../../uart.rst:38
msgid ""
"The ``bits`` defines the size of bytes being transmitted, and the board "
"only supports 8. The ``parity`` parameter defines how parity is checked, "
"and it can be ``None``, ``microbit.uart.ODD`` or ``microbit.uart.EVEN``. "
"The ``stop`` parameter tells the number of stop bits, and has to be 1 for"
" this board."
msgstr ""

#: ../../uart.rst:44
msgid ""
"If ``tx`` and ``rx`` are not specified then the internal USB-UART TX/RX "
"pins are used which connect to the USB serial convertor on the micro:bit,"
" thus connecting the UART to your PC.  You can specify any other pins you"
" want by passing the desired pin objects to the ``tx`` and ``rx`` "
"parameters."
msgstr ""

#: ../../uart.rst:51
msgid ""
"When connecting the device, make sure you \"cross\" the wires -- the TX "
"pin on your board needs to be connected with the RX pin on the device, "
"and the RX pin -- with the TX pin on the device. Also make sure the "
"ground pins of both devices are connected."
msgstr ""

#: ../../uart.rst:59
msgid "Return ``True`` if any characters waiting, else ``False``."
msgstr ""

#: ../../uart.rst:63
msgid ""
"Read characters.  If ``nbytes`` is specified then read at most that many "
"bytes."
msgstr ""

#: ../../uart.rst:68
msgid "Read as much data as possible."
msgstr ""

#: ../../uart.rst:70
msgid "Return value: a bytes object or ``None`` on timeout."
msgstr ""

#: ../../uart.rst:74
msgid ""
"Read bytes into the ``buf``.  If ``nbytes`` is specified then read at "
"most that many bytes.  Otherwise, read at most ``len(buf)`` bytes."
msgstr ""

#: ../../uart.rst:77
msgid ""
"Return value: number of bytes read and stored into ``buf`` or ``None`` on"
" timeout."
msgstr ""

#: ../../uart.rst:82
msgid "Read a line, ending in a newline character."
msgstr ""

#: ../../uart.rst:84
msgid ""
"Return value: the line read or ``None`` on timeout. The newline character"
" is included in the returned bytes."
msgstr ""

#: ../../uart.rst:89
msgid "Write the buffer of bytes to the bus."
msgstr ""

#: ../../uart.rst:91
msgid "Return value: number of bytes written or ``None`` on timeout."
msgstr ""

