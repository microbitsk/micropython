msgid ""
msgstr ""
"Project-Id-Version: bbc-microbit-micropython\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-25 09:53+0200\n"
"PO-Revision-Date: 2018-05-04 08:14-0400\n"
"Last-Translator: RicCo386 <richard.kellner@pycon.sk>\n"
"Language-Team: Slovak\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"Plural-Forms: nplurals=4; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 3;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: bbc-microbit-micropython\n"
"X-Crowdin-Language: sk\n"
"X-Crowdin-File: /master/docs/locale/sk/LC_MESSAGES/music.po\n"
"\n"
"Language: sk_SK\n"

#: ../../music.rst:2
msgid "Music"
msgstr ""

#: ../../music.rst:6
msgid "This is the ``music`` module. You can use it to play simple tunes, provided that you connect a speaker to your board. By default the ``music`` module expects the speaker to be connected via pin 0:"
msgstr ""

#: ../../music.rst:12
msgid "This arrangement can be overridden (as discussed below)."
msgstr ""

#: ../../music.rst:14
msgid "To access this module you need to::"
msgstr ""

#: ../../music.rst:18
msgid "We assume you have done this for the examples below."
msgstr ""

#: ../../music.rst:21
msgid "Musical Notation"
msgstr ""

#: ../../music.rst:23
msgid "An individual note is specified thus::"
msgstr ""

#: ../../music.rst:27
msgid "For example, ``A1:4`` refers to the note \"A\" in octave 1 that lasts for four ticks (a tick is an arbitrary length of time defined by a tempo setting function - see below). If the note name ``R`` is used then it is treated as a rest (silence)."
msgstr ""

#: ../../music.rst:32
msgid "Accidentals (flats and sharps) are denoted by the ``b`` (flat - a lower case b) and ``#`` (sharp - a hash symbol). For example, ``Ab`` is A-flat and ``C#`` is C-sharp."
msgstr ""

#: ../../music.rst:36
msgid "**Note names are case-insensitive.**"
msgstr ""

#: ../../music.rst:38
msgid "The ``octave`` and ``duration`` parameters are states that carry over to subsequent notes until re-specified. The default states are ``octave = 4`` (containing middle C) and ``duration = 4`` (a crotchet, given the default tempo settings - see below)."
msgstr ""

#: ../../music.rst:43
msgid "For example, if 4 ticks is a crotchet, the following list is crotchet, quaver, quaver, crotchet based arpeggio::"
msgstr ""

#: ../../music.rst:48
msgid "The opening of Beethoven's 5th Symphony would be encoded thus::"
msgstr ""

#: ../../music.rst:52
msgid "The definition and scope of an octave conforms to the table listed `on this page about scientific pitch notation`_.  For example, middle \"C\" is ``'c4'`` and concert \"A\" (440) is ``'a4'``. Octaves start on the note \"C\"."
msgstr ""

#: ../../music.rst:60
msgid "Functions"
msgstr ""

#: ../../music.rst:64
msgid "Sets the approximate tempo for playback."
msgstr ""

#: ../../music.rst:66
msgid "A number of ticks (expressed as an integer) constitute a beat. Each beat is to be played at a certain frequency per minute (expressed as the more familiar BPM - beats per minute - also as an integer)."
msgstr ""

#: ../../music.rst:68
msgid "Suggested default values allow the following useful behaviour:"
msgstr ""

#: ../../music.rst:70
msgid "``music.set_tempo()`` - reset the tempo to default of ticks = 4, bpm = 120"
msgstr ""

#: ../../music.rst:71
msgid "``music.set_tempo(ticks=8)`` - change the \"definition\" of a beat"
msgstr ""

#: ../../music.rst:72
msgid "``music.set_tempo(bpm=180)`` - just change the tempo"
msgstr ""

#: ../../music.rst:74
msgid "To work out the length of a tick in milliseconds is very simple arithmetic: ``60000/bpm/ticks_per_beat`` . For the default values that's ``60000/120/4 = 125 milliseconds`` or ``1 beat = 500 milliseconds``."
msgstr ""

#: ../../music.rst:78
msgid "Gets the current tempo as a tuple of integers: ``(ticks, bpm)``."
msgstr ""

#: ../../music.rst:82
msgid "Plays ``music`` containing the musical DSL defined above."
msgstr ""

#: ../../music.rst:84
msgid "If ``music`` is a string it is expected to be a single note such as, ``'c1:4'``."
msgstr ""

#: ../../music.rst:87
msgid "If ``music`` is specified as a list of notes (as defined in the section on the musical DSL, above) then they are played one after the other to perform a melody."
msgstr ""

#: ../../music.rst:91
msgid "In both cases, the ``duration`` and ``octave`` values are reset to their defaults before the music (whatever it may be) is played."
msgstr ""

#: ../../music.rst:94
msgid "An optional argument to specify the output pin can be used to override the default of ``microbit.pin0``."
msgstr ""

#: ../../music.rst:97 ../../music.rst:108
msgid "If ``wait`` is set to ``True``, this function is blocking."
msgstr ""

#: ../../music.rst:99
msgid "If ``loop`` is set to ``True``, the tune repeats until ``stop`` is called (see below) or the blocking call is interrupted."
msgstr ""

#: ../../music.rst:104
msgid "Plays a pitch at the integer frequency given for the specified number of milliseconds. For example, if the frequency is set to 440 and the length to 1000 then we hear a standard concert A for one second."
msgstr ""

#: ../../music.rst:110
msgid "If ``duration`` is negative the pitch is played continuously until either the blocking call is interrupted or, in the case of a background call, a new frequency is set or ``stop`` is called (see below)."
msgstr ""

#: ../../music.rst:116
msgid "Stops all music playback on a given pin."
msgstr ""

#: ../../music.rst:120
msgid "Resets the state of the following attributes in the following way:"
msgstr ""

#: ../../music.rst:122
msgid "``ticks = 4``"
msgstr ""

#: ../../music.rst:123
msgid "``bpm = 120``"
msgstr ""

#: ../../music.rst:124
msgid "``duration = 4``"
msgstr ""

#: ../../music.rst:125
msgid "``octave = 4``"
msgstr ""

#: ../../music.rst:128
msgid "Built in Melodies"
msgstr ""

#: ../../music.rst:130
msgid "For the purposes of education and entertainment, the module contains several example tunes that are expressed as Python lists. They can be used like this::"
msgstr ""

#: ../../music.rst:136
msgid "All the tunes are either out of copyright, composed by Nicholas H.Tollervey and released to the public domain or have an unknown composer and are covered by a fair (educational) use provision."
msgstr ""

#: ../../music.rst:140
msgid "They are:"
msgstr ""

#: ../../music.rst:142
msgid "``DADADADUM`` - the opening to Beethoven's 5th Symphony in C minor."
msgstr ""

#: ../../music.rst:143
msgid "``ENTERTAINER`` - the opening fragment of Scott Joplin's Ragtime classic \"The Entertainer\"."
msgstr ""

#: ../../music.rst:144
msgid "``PRELUDE`` - the opening of the first Prelude in C Major of J.S.Bach's 48 Preludes and Fugues."
msgstr ""

#: ../../music.rst:145
msgid "``ODE`` - the \"Ode to Joy\" theme from Beethoven's 9th Symphony in D minor."
msgstr ""

#: ../../music.rst:146
msgid "``NYAN`` - the Nyan Cat theme (http://www.nyan.cat/). The composer is unknown. This is fair use for educational porpoises (as they say in New York)."
msgstr ""

#: ../../music.rst:147
msgid "``RINGTONE`` - something that sounds like a mobile phone ringtone. To be used to indicate an incoming message."
msgstr ""

#: ../../music.rst:148
msgid "``FUNK`` - a funky bass line for secret agents and criminal masterminds."
msgstr ""

#: ../../music.rst:149
msgid "``BLUES`` - a boogie-woogie 12-bar blues walking bass."
msgstr ""

#: ../../music.rst:150
msgid "``BIRTHDAY`` - \"Happy Birthday to You...\" for copyright status see: http://www.bbc.co.uk/news/world-us-canada-34332853"
msgstr ""

#: ../../music.rst:151
msgid "``WEDDING`` - the bridal chorus from Wagner's opera \"Lohengrin\"."
msgstr ""

#: ../../music.rst:152
msgid "``FUNERAL`` - the \"funeral march\" otherwise known as Frédéric Chopin's Piano Sonata No. 2 in B♭ minor, Op. 35."
msgstr ""

#: ../../music.rst:153
msgid "``PUNCHLINE`` - a fun fragment that signifies a joke has been made."
msgstr ""

#: ../../music.rst:154
msgid "``PYTHON`` - John Philip Sousa's march \"Liberty Bell\" aka, the theme for \"Monty Python's Flying Circus\" (after which the Python programming language is named)."
msgstr ""

#: ../../music.rst:155
msgid "``BADDY`` - silent movie era entrance of a baddy."
msgstr ""

#: ../../music.rst:156
msgid "``CHASE`` - silent movie era chase scene."
msgstr ""

#: ../../music.rst:157
msgid "``BA_DING`` - a short signal to indicate something has happened."
msgstr ""

#: ../../music.rst:158
msgid "``WAWAWAWAA`` - a very sad trombone."
msgstr ""

#: ../../music.rst:159
msgid "``JUMP_UP`` - for use in a game, indicating upward movement."
msgstr ""

#: ../../music.rst:160
msgid "``JUMP_DOWN`` - for use in a game, indicating downward movement."
msgstr ""

#: ../../music.rst:161
msgid "``POWER_UP`` - a fanfare to indicate an achievement unlocked."
msgstr ""

#: ../../music.rst:162
msgid "``POWER_DOWN`` - a sad fanfare to indicate an achievement lost."
msgstr ""

#: ../../music.rst:165
msgid "Example"
msgstr ""

